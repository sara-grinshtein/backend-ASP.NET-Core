// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mock;

#nullable disable

namespace Mock.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20250604203352_MakeVolunteerIdNullable3")]
    partial class MakeVolunteerIdNullable3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Repository.Entites.Helped", b =>
                {
                    b.Property<int>("helped_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("helped_id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("helped_first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("helped_last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("helped_id");

                    b.ToTable("Helpeds");
                });

            modelBuilder.Entity("Repository.Entites.Message", b =>
                {
                    b.Property<int>("message_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("message_id"));

                    b.Property<bool?>("ConfirmArrival")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("helped_id")
                        .HasColumnType("int");

                    b.Property<bool>("isDone")
                        .HasColumnType("bit");

                    b.Property<int?>("volunteer_id")
                        .HasColumnType("int");

                    b.HasKey("message_id");

                    b.HasIndex("helped_id");

                    b.HasIndex("volunteer_id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Repository.Entites.My_areas_of_knowledge", b =>
                {
                    b.Property<int>("ID_knowledge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_knowledge"));

                    b.Property<string>("describtion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("volunteer_id")
                        .HasColumnType("int");

                    b.HasKey("ID_knowledge");

                    b.HasIndex("volunteer_id");

                    b.ToTable("areas_Of_Knowledges");
                });

            modelBuilder.Entity("Repository.Entites.Response", b =>
                {
                    b.Property<int>("response_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("response_id"));

                    b.Property<string>("context")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("helped_id")
                        .HasColumnType("int");

                    b.Property<int>("message_id")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.HasKey("response_id");

                    b.ToTable("responses");
                });

            modelBuilder.Entity("Repository.Entites.Volunteer", b =>
                {
                    b.Property<int>("volunteer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("volunteer_id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("end_time")
                        .HasColumnType("time");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("start_time")
                        .HasColumnType("time");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("volunteer_first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("volunteer_last_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("volunteer_id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("Repository.Entites.Message", b =>
                {
                    b.HasOne("Repository.Entites.Helped", "Helped")
                        .WithMany()
                        .HasForeignKey("helped_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repository.Entites.Volunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("volunteer_id");

                    b.Navigation("Helped");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("Repository.Entites.My_areas_of_knowledge", b =>
                {
                    b.HasOne("Repository.Entites.Volunteer", null)
                        .WithMany("areas_of_knowledge")
                        .HasForeignKey("volunteer_id");
                });

            modelBuilder.Entity("Repository.Entites.Volunteer", b =>
                {
                    b.Navigation("areas_of_knowledge");
                });
#pragma warning restore 612, 618
        }
    }
}
